name: Linux

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test-linux:
    name: Install on Linux
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        # Test all Linux platforms
        os: [ ubuntu-24.04, ubuntu-22.04, ubuntu-24.04-arm, ubuntu-22.04-arm ]
    concurrency:
      group: '${{ github.workflow }}-${{ matrix.os }}-${{ github.head_ref || github.ref_name }}'
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4

      # Install x86-64 emulation support on ARM64 runners
      - name: Install x86-64 emulation support (ARM64 only)
        if: contains(matrix.os, 'arm')
        run: |
          # Install QEMU user-mode emulation first
          sudo apt-get update
          sudo apt-get install -y qemu-user-static binfmt-support

          # Backup and disable ALL existing source configurations
          sudo mv /etc/apt/sources.list /etc/apt/sources.list.bak
          # Ubuntu 24.04 uses DEB822 format sources that conflict with our arch-specific setup
          if [ -f /etc/apt/sources.list.d/ubuntu.sources ]; then
            sudo mv /etc/apt/sources.list.d/ubuntu.sources /etc/apt/sources.list.d/ubuntu.sources.bak
          fi

          # Determine Ubuntu version
          UBUNTU_VERSION=$(lsb_release -cs)

          # Create new sources.list with ARM64 packages only
          sudo tee /etc/apt/sources.list > /dev/null << EOF
          # ARM64 packages from ports.ubuntu.com
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports ${UBUNTU_VERSION} main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports ${UBUNTU_VERSION}-updates main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports ${UBUNTU_VERSION}-backports main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports ${UBUNTU_VERSION}-security main restricted universe multiverse
          EOF

          # Add amd64 architecture
          sudo dpkg --add-architecture amd64

          # Configure amd64 sources (amd64 packages are on archive.ubuntu.com)
          sudo tee /etc/apt/sources.list.d/amd64.list > /dev/null << EOF
          # AMD64 packages from archive.ubuntu.com
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu ${UBUNTU_VERSION} main restricted universe multiverse
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu ${UBUNTU_VERSION}-updates main restricted universe multiverse
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu ${UBUNTU_VERSION}-backports main restricted universe multiverse
          deb [arch=amd64] http://security.ubuntu.com/ubuntu ${UBUNTU_VERSION}-security main restricted universe multiverse
          EOF

          # Update package lists and install amd64 libraries
          sudo apt-get update
          sudo apt-get install -y libc6:amd64

      # Install Homebrew on Linux
      - run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          test -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"
          test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          test -r ~/.bash_profile && echo "eval \"\$($(brew --prefix)/bin/brew shellenv)\"" >> ~/.bash_profile
          echo "eval \"\$($(brew --prefix)/bin/brew shellenv)\"" >> ~/.profile
          echo "/home/linuxbrew/.linuxbrew/bin" >> $GITHUB_PATH

      - run: brew update-reset

      - name: Add local tap for testing
        run: brew tap expresslang/eep $GITHUB_WORKSPACE

      - run: |
          brew install --build-from-source --verbose expresslang/eep/eep

      - run: which eep

      - run: eep -h

      - run: brew test --verbose expresslang/eep/eep

      - run: brew uninstall expresslang/eep/eep
